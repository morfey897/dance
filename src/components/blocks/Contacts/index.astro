---
import { getEnv } from "../../../services/cloudflare";
import Contacts from "./Contacts";
import type { ContactsType } from "./types";
import { getIndex } from "../../../utils/md";
import { translateJSON } from "../../../services/translate";

const { lang } = Astro.params;

let contacts = [];
let localBusiness = [];
try {
  contacts = await Astro.glob("../../../../content/contacts/*.md");
} catch (e) {}
try {
  localBusiness = await Astro.glob("../../../../content/local-business.md");
} catch (e) {}
const indexContacts = getIndex(contacts);
const indexLocalBusiness = getIndex(localBusiness);

const localBusinessProps = { ...indexLocalBusiness?.frontmatter };

const contactsProps = {
  ...indexContacts?.frontmatter,
  bodyHTML: indexContacts?.compiledContent(),
};

const translation = await translateJSON(
  {
    target: lang,
    content: {
      localBusiness: localBusinessProps,
      contacts: contactsProps
    },
  },
  Astro.request
);

const props = {
  ...localBusinessProps,
  ...translation?.localBusiness,
  ...contactsProps,
  ...translation?.contacts,
  google_api_key: getEnv(Astro.request).GOOGLE_API_KEY,
} as ContactsType;
---

<Contacts {...props} client:load />
