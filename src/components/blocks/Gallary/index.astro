---
import Gallary from "./Gallary";
import type { GallaryType } from "./types";
import {
  getIndex,
  getList,
  sortComparator,
  getFileName,
} from "../../../utils/md";
import { translateJSON } from "../../../services/translate";

const { lang } = Astro.params;

let directions = [];
try {
  directions = await Astro.glob("../../../../content/gallary/*.md");
} catch (e) {}

const indexDirection = getIndex(directions);
const list = getList(directions);

const childrenList = list.sort(sortComparator).map((data) => {
  const uid = getFileName(data);
  const frontmatter = data.frontmatter;
  return {
    uid,
    headline: "",
    subheadline: "",
    bodyHTML: data.compiledContent(),
    ...frontmatter,
  };
});

const gallaryProps = {
  ...indexDirection?.frontmatter,
  list: childrenList,
  bodyHTML: indexDirection?.compiledContent(),
};

const translation = await translateJSON(
  {
    target: lang,
    content: {
      gallary: gallaryProps,
    },
  },
  Astro.request
);

const props = {
  ...gallaryProps,
  ...translation?.gallaryProps,
} as GallaryType;
---

<Gallary {...props} client:load />
