---
import Directions from "./Directions";
import type { DirectionsType } from "./types";
import { getIndex, getList, sortComparator, getFileName } from "../../../utils/md";
import { translateJSON } from "../../../services/translate";

const { lang } = Astro.params;

let directions = [];
try {
  directions = await Astro.glob("../../../../content/directions/*.md");
} catch (e) {}

const indexDirection = getIndex(directions);
const list = getList(directions);

const childrenList = list.sort(sortComparator).map((data) => {
  const uid = getFileName(data);
  const frontmatter = data.frontmatter;
  return {
    uid,
    headline: "",
    image: "",
    subheadline: "",
    bodyHTML: data.compiledContent(),
    ...frontmatter,
  };
});

const dirrectionsProps = {
  ...indexDirection?.frontmatter,
  bodyHTML: indexDirection?.compiledContent(),
  list: childrenList,
} as DirectionsType;


const translation = await translateJSON(
  {
    target: lang,
    content: {
      dirrections: dirrectionsProps,
    },
  },
  Astro.request
);

const props = {
  ...dirrectionsProps,
  ...translation?.dirrections,
};
---

<Directions {...props} client:load />
