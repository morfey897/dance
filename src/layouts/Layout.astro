---
import "@fontsource/comfortaa/300.css";
import "@fontsource/comfortaa/400.css";
import "@fontsource/comfortaa/500.css";

import { getLang, normalize } from "../utils/url";

export interface Props {
	title: string;
	description: string;
	image: string;
	lang?: string;
	og?: {
		title?: string;
		description?: string;
	};
	schema?: Object;
}
const { lang, title, description, image, og, schema } = Astro.props;
const url = normalize(Astro.url);
const contentLang = lang || getLang(Astro.url);

let structuredData = JSON.stringify({
	"@context": "https://schema.org/",
	"@type": "DanceSchool",
	image: image,
	url,
	...schema,
});
---

<html lang={contentLang}>
	<style is:global>
		html {
			scroll-behavior: smooth;
			height: 100%;
		}
		body {
			box-sizing: border-box;
			margin: 0 !important;
			padding: 0 !important;
			width: 100%;
			height: 100%;
			overflow-x: hidden;
			color: white;
			background-color: black;

			display: flex;
			flex-direction: column;
		}
		.hide-scroll {
			scrollbar-width: none;
			-ms-overflow-style: none;
		}
		.hide-scroll::-webkit-scrollbar {
			display: none;
		}
		strong {
			font-weight: 500;
		}
		header,
		footer {
			flex-grow: 0;
			flex-shrink: 0;
		}
		main {
			flex-grow: 1;
		}
	</style>

	<meta charset="UTF-8" />
	<meta content="width=device-width,initial-scale=1" name="viewport" />
	<meta content={url} property="og:url" />
	<link rel="canonical" href={url} />
	<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
	<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
	<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
	<link rel="manifest" href="/site.webmanifest" />
	<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#161616" />
	<meta name="msapplication-TileColor" content="#161616" />
	<meta name="theme-color" content="#161616" />
	<title>{title}</title>
	<meta content={description} name="description" />
	<meta content={og?.title || title} name="og:title" />
	<meta content={og?.description || description} name="og:description" />
	{image && <meta content={image} name="og:image" />}
	<script type="application/ld+json" set:html={structuredData}></script>
	<body>
		<slot />
	</body>
</html>
