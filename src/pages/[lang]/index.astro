---
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/blocks/Header/index.astro";
import About from "../../components/blocks/About/index.astro";
import Schedule from "../../components/blocks/Schedule/index.astro";
import Prices from "../../components/blocks/Prices/index.astro";
import Contacts from "../../components/blocks/Contacts/index.astro";
import Directions from "../../components/blocks/Directions/index.astro";
import Gallery from "../../components/blocks/Gallary/index.astro";
import Footer from "../../components/blocks/Footer/index.astro";
import ClearAnchor from "../../components/elements/ClearAnchor";
import { isAbsolutePath, concatPaths } from "../../utils/url";
let localBusiness = [];
try {
  localBusiness = await Astro.glob("../../../content/local-business.md");
} catch (e) {}

const { title, description, image, address, phones, openingHours } =
  (localBusiness || [])[0]?.frontmatter || {};
const schema = {
  name: title,
  description,
  address: {
    "@type": "PostalAddress",
    streetAddress: address?.street || "",
    addressLocality: address?.city || "",
    addressCountry: address?.country || "",
  },
  geo: {
    "@type": "GeoCoordinates",
    latitude: address?.lat || "",
    longitude: address?.lng || "",
  },
  telephone: (phones && phones[0]) || "",
  sameAs: (address?.socials || []).map(({ href }) => href),
  openingHoursSpecification: openingHours || [],
  paymentAccepted: ["Готівка", "Кредитна карта"],
};
let origin = new URL(Astro.url).origin;
let imageAbsolute = isAbsolutePath(image) ? image : concatPaths(origin, image);
---

<Layout
  title={title}
  description={description}
  image={imageAbsolute}
  schema={schema}
>
  <Header />
  <main>
    <About />
    <Directions />
    <Schedule />
    <Prices />
    <Gallery />
    <Contacts />
    <ClearAnchor client:idle />
  </main>
  <Footer />
</Layout>
